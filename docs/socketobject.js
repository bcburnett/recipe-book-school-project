Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets:
      { '1dm5OA3osFlMSDTVAAAA': [Socket],
        Oa9fTKO0ZoqkBn1sAAAC: [Circular] },
     connected:
      { '1dm5OA3osFlMSDTVAAAA': [Socket],
        Oa9fTKO0ZoqkBn1sAAAC: [Circular] },
     fns: [ [Function: socketIoSharedSessionMiddleware] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps: { '/': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 2,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::5000',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 19 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 2,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '1dm5OA3osFlMSDTVAAAA': [Room], Oa9fTKO0ZoqkBn1sAAAC: [Room] },
     sids:
      { '1dm5OA3osFlMSDTVAAAA': [Object],
        Oa9fTKO0ZoqkBn1sAAAC: [Object] },
     encoder: Encoder {} },
  id: 'Oa9fTKO0ZoqkBn1sAAAC',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: 'Oa9fTKO0ZoqkBn1sAAAC',
        server: [Server],
        upgrading: true,
        upgraded: false,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '::1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 10000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 4982,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 401,
           [Symbol(triggerId)]: 396 },
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [Timeout],
           _idleStart: 4995,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 406,
           [Symbol(triggerId)]: 405 },
        transport: [XHR],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: 'Oa9fTKO0ZoqkBn1sAAAC',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=MaDskTC',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { Oa9fTKO0ZoqkBn1sAAAC: [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: 'Oa9fTKO0ZoqkBn1sAAAC',
     server:
      Server {
        clients: [Object],
        clientsCount: 2,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: 'io',
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: true,
     upgraded: false,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=MaDskTC',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup] },
     remoteAddress: '::1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 10000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 4982,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 401,
        [Symbol(triggerId)]: 396 },
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 4995,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 406,
        [Symbol(triggerId)]: 405 },
     transport:
      XHR {
        readyState: 'open',
        discarded: false,
        closeTimeout: 30000,
        maxHttpBufferSize: 100000000,
        httpCompression: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 5,
        sid: 'Oa9fTKO0ZoqkBn1sAAAC',
        req: null,
        res: null,
        writable: false,
        dataReq: null,
        dataRes: null },
     _events:
      { close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms: { Oa9fTKO0ZoqkBn1sAAAC: 'Oa9fTKO0ZoqkBn1sAAAC' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: 'localhost:5000',
        connection: 'keep-alive',
        accept: '*/*',
        'user-agent':
         'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36',
        'sec-metadata': 'destination=empty, site=same-origin',
        referer: 'http://localhost:5000/dashboard',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-US,en;q=0.9',
        cookie:
         'connect.sid=s%3Ap4-OBPZhLM9M8Vao02UJ1sEbN-bLiWWe.aqmw1%2BYjsXWiIZ5BJxQUr9myFcKILKcuqCI%2Beofu7Mc; io=iYNRfo23OHv0zHzvAAAB' },
     time: 'Wed Feb 20 2019 21:20:43 GMT-0500 (Eastern Standard Time)',
     address: '::1',
     xdomain: false,
     secure: false,
     issued: 1550715643728,
     url: '/socket.io/?EIO=3&transport=polling&t=MaDskTC',
     query: { EIO: '3', transport: 'polling', t: 'MaDskTC' },
     secret: undefined,
     cookies:
      { 'connect.sid':
         's:p4-OBPZhLM9M8Vao02UJ1sEbN-bLiWWe.aqmw1+YjsXWiIZ5BJxQUr9myFcKILKcuqCI+eofu7Mc',
        io: 'iYNRfo23OHv0zHzvAAAB' },
     signedCookies: {},
     _parsedUrl:
      Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?EIO=3&transport=polling&t=MaDskTC',
        query: 'EIO=3&transport=polling&t=MaDskTC',
        pathname: '/socket.io/',
        path: '/socket.io/?EIO=3&transport=polling&t=MaDskTC',
        href: '/socket.io/?EIO=3&transport=polling&t=MaDskTC',
        _raw: '/socket.io/?EIO=3&transport=polling&t=MaDskTC' },
     sessionStore:
      Store {
        _emitter: [EventEmitter],
        _errorHandler: [Function: bound handleError],
        client: [MongoClient],
        db: [Db],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        options: [OptionsType],
        generate: [Function] },
     sessionID: 'p4-OBPZhLM9M8Vao02UJ1sEbN-bLiWWe',
     session:
      Session {
        cookie: [Object],
        flash: {},
        passport: [Object],
        userinfo: [Object] } },
  fns: [],
  flags: {},
  _rooms: [],
  onevent: [Function],
  _events:
   { disconnect: [Function],
     hello: [Function],
     getPostForm: [Function],
     newPost: [Function],
     editSend: [Function],
     loadPosts: [Function],
     detailview: [Function],
     dele: [Function],
     edit: [Function] },
  _eventsCount: 9 }

